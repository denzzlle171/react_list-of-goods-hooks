{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","useState","sortBy","setSortBy","isReversed","setIsReversed","visibleGoods","goods","sortedBy","preparedGoods","sort","good1","good2","alphabet","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,iBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAA4BC,mBAAiB,IAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAkB,GAAtD,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAjCR,SACEC,EACAC,EACAJ,GAEA,IAAIK,EAAa,YAAOF,GAqBxB,OAnBIC,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKV,EAAOe,SACV,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAAOiB,OACV,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXX,IACFK,EAAgBA,EAAcO,WAGzBP,EAOcQ,CAAiBlB,EAAiBG,EAAQE,GAE/D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACPhB,IAAWJ,EAAOe,UAAY,YAEhCO,QAAS,kBAAMjB,EAAUL,EAAOe,WALlC,iCASA,wBACEM,KAAK,SACLD,UAAS,4BAAuBhB,IAAWJ,EAAOiB,QAAU,YAC5DK,QAAS,kBAAMjB,EAAUL,EAAOiB,SAHlC,4BAQA,wBACEI,KAAK,SACLD,UAAS,6BAAwBd,GAAc,YAC/CgB,QAAS,kBAAMf,GAAc,SAACgB,GAAD,OAAgBA,MAH/C,sBAQEnB,GAAUE,IACV,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPjB,EAAU,IACVE,GAAc,IALlB,sBAaJ,6BACGC,EAAagB,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YClGnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5ec088bb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  alphabet = 'alphabet',\n  length = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortedBy: string,\n  isReversed: boolean,\n) {\n  let preparedGoods = [...goods];\n\n  if (sortedBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortedBy) {\n        case SortBy.alphabet:\n          return good1.localeCompare(good2);\n\n        case SortBy.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState<string>('');\n  const [isReversed, setIsReversed] = useState<boolean>(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortBy, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${\n            sortBy !== SortBy.alphabet && 'is-light'\n          }`}\n          onClick={() => setSortBy(SortBy.alphabet)}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={`button is-success ${sortBy !== SortBy.length && 'is-light'}`}\n          onClick={() => setSortBy(SortBy.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={() => setIsReversed((prevState) => !prevState)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortBy('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\n"],"sourceRoot":""}